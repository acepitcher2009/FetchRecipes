{"version":3,"sources":["components/SearchBar.js","components/RecipeCard.js","components/RecipeList.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","className","value","onChange","event","setSearchValue","target","placeholder","RecipeCard","Card","CardImg","top","src","recipes","thumbnail","CardBody","CardTitle","tag","title","CardText","ingredients","RecipeList","length","searchValue","map","index","Main","useState","setRecipes","getRecipeRequest","a","url","fetch","response","json","responseJson","results","useEffect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAkBeA,EAfG,SAACC,GACf,OACI,sBAAKC,UAAU,oDAAf,UACI,oBAAIA,UAAU,0BAAd,6BACA,uBACIA,UAAU,6BACVC,MAAOF,EAAME,MACbC,SAAU,SAACC,GAAD,OAAWJ,EAAMK,eAAeD,EAAME,OAAOJ,QACvDK,YAAY,0B,wCCIbC,EAXI,SAACR,GAChB,OACI,eAACS,EAAA,EAAD,CAAMR,UAAU,UAAhB,UACI,cAACS,EAAA,EAAD,CAASC,KAAG,EAACC,IAAKZ,EAAMa,QAAQC,UAAYd,EAAMa,QAAQC,UAAY,qBACtE,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAKhB,UAAU,WAA9B,SAA0CD,EAAMa,QAAQK,QACxD,cAACC,EAAA,EAAD,CAAUlB,UAAU,WAApB,SAAgCD,EAAMa,QAAQO,qBCiB/CC,EAvBI,SAACrB,GAChB,OAAKA,EAAMa,QAAQS,QAAUtB,EAAMuB,YAAYD,OAEvC,8BACI,oBAAIrB,UAAU,0BAAd,uCAKR,gCACI,oBAAIA,UAAU,kBAAd,qBACA,uBACA,qBAAKA,UAAU,qCAAf,SACKD,EAAMa,QAAQW,KAAI,SAACX,EAASY,GAAV,OACf,qBAAKxB,UAAU,WAAf,SACI,cAAC,EAAD,CAAYY,QAASA,eCmB9Ba,EAhCF,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRd,EADQ,KACCe,EADD,OAEuBD,mBAAS,IAFhC,mBAERJ,EAFQ,KAEKlB,EAFL,KAITwB,EAAgB,uCAAG,WAAON,GAAP,mBAAAO,EAAA,6DACfC,EADe,4CAC4BR,GAD5B,SAGES,MAAMD,GAHR,cAGfE,EAHe,gBAIMA,EAASC,OAJf,QAIfC,EAJe,QAMJC,SACbR,EAAWO,EAAaC,SAPP,2CAAH,sDAoBtB,OAPAC,qBAAU,WACFd,GACAM,EAAiBN,KAEtB,CAACA,IAIA,sBAAKtB,UAAU,kBAAf,UACI,cAAC,EAAD,CAAWsB,YAAaA,EAAalB,eAAgBA,IACrD,cAAC,EAAD,CAAYQ,QAASA,EAASU,YAAaA,QCvBxCe,EANH,WACV,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3bc3ae68.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/styles.css'\r\n\r\nconst SearchBar = (props) => {\r\n    return (\r\n        <div className='row d-flex justify-content-center mx-auto my-auto'>\r\n            <h3 className='textCenter spacing font'>Search Recipes:</h3>\r\n            <input\r\n                className='form-control spacing input'\r\n                value={props.value}\r\n                onChange={(event) => props.setSearchValue(event.target.value)}\r\n                placeholder='Type to search...'\r\n            ></input>\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport '../styles/styles.css'\r\n\r\nconst RecipeCard = (props) => {\r\n    return (\r\n        <Card className='bckgrnd'>\r\n            <CardImg top src={props.recipes.thumbnail ? props.recipes.thumbnail : \"noImageFound.jpg\"} />\r\n            <CardBody>\r\n                <CardTitle tag=\"h5\" className=\"cardFont\">{props.recipes.title}</CardTitle>\r\n                <CardText className=\"cardFont\">{props.recipes.ingredients}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\nexport default RecipeCard;","import React from 'react';\r\nimport RecipeCard from './RecipeCard';\r\nimport '../styles/styles.css';\r\n\r\nconst RecipeList = (props) => {\r\n    if (!props.recipes.length && props.searchValue.length) {\r\n        return (\r\n            <div>\r\n                <h2 className='textCenter spacing font'>Sorry, No Recipes Found</h2>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 className='textCenter font'>Recipes</h1>\r\n            <hr />\r\n            <div className='row d-flex align-items-center mb-2'>\r\n                {props.recipes.map((recipes, index) => (\r\n                    <div className=\"col-sm-4\">\r\n                        <RecipeCard recipes={recipes} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeList;","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SearchBar from './SearchBar';\r\nimport RecipeList from './RecipeList';\r\nimport '../styles/styles.css'\r\n\r\nconst Main = () => {\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    const getRecipeRequest = async (searchValue) => {\r\n        const url = `http://www.recipepuppy.com/api/?q=${searchValue}`;\r\n\r\n        const response = await fetch(url);\r\n        const responseJson = await response.json();\r\n\r\n        if (responseJson.results) {\r\n            setRecipes(responseJson.results);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (searchValue) {\r\n            getRecipeRequest(searchValue);\r\n        }\r\n    }, [searchValue]);\r\n\r\n\r\n    return (\r\n        <div className='container-fluid'>\r\n            <SearchBar searchValue={searchValue} setSearchValue={setSearchValue} />\r\n            <RecipeList recipes={recipes} searchValue={searchValue} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport Main from './components/Main';\n\n\nconst App = () => {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}